#include "hgimg4.as"

	wx=ginfo_sx:wy=ginfo_sy			; 描画エリアのサイズ
	setpos GPOBJ_CAMERA, 0,1,10		; カメラ位置を設定

	;	3Dモデルを生成
	gpfloor id_floor, 40,40, $008080	; 床ノードを追加
	gppbind id_floor, 0

	max=16
	x=-8
	repeat max
	gpbox id_model, 1, $808080		; 箱ノードを生成する
	setscale id_model, 1,2,0.2
	z=rnd(8)-4
	setpos id_model, x,0.5,z
	gppbind id_model 
	x+=1
	loop

	; テクスチャマテリアル作成
	gptexmat id_ptex, "res/efx.png"	,GPOBJ_MATOPT_BLENDADD|GPOBJ_MATOPT_NOZWRITE

	;	イベントリストを登録
	;
	newevent ev1			; 新しいイベントIDを取得
	event_setdir ev1, -0.05,-0.05,-0.05, 0.05,0.05,0.05
	event_adddir ev1
	event_fade ev1, -8
	event_wait ev1, 32
	event_delobj ev1

	ddim respos,4
	resid=0

	px=0.0:py=0.0

*main
	stick key,15+256
	if key&128 : end

	if key&256 {
		px=double(mousex)/ginfo_sx*20-10
		py=double(mousey)/ginfo_sy*20-10
	}
	gplookat GPOBJ_CAMERA, px,-py,0	; カメラから指定した座標を見る

	gppraytest hitres,GPOBJ_CAMERA
	if hitres=id_floor : hitres=0
	if hitres>0 {
		setcolor hitres, 255,0,0
		getwork GPOBJ_CAMERA,dx,dy,dz
		gpplate id, 1,1,-1,id_ptex		; 板ノードを追加
		setobjmode id, OBJ_MOVE			; 自動移動を設定する
		setpos id,dx,dy,dz
		setevent id, ev1
	}
	redraw 0
	rgbcolor $eecc:boxf
	gpdraw

	gmode 1:rgbcolor $ff0000
	sx=wx/5:sy=wy/5
	x=wx/2:y=wy/2
	boxf x-sx,y-1,x+sx,y+1
	boxf x-1,y-sy,x+1,y+sy

	rgbcolor -1:pos 0,0
	mes "HGIMG4 Sample"

	redraw 1
	await 16

	goto *main
